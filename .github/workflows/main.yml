name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Docker
        uses: docker/setup-buildx-action@v3

      - name: Build Backend Image
        run: docker build -f ./Backend/Dockerfile.backend -t taskapp-backend ./Backend


      - name: Build Frontend Image
        run: docker build -f ./frontend/Dockerfile.frontend -t taskapp-frontend ./frontend

      - name: Run Docker Compose
        run: docker compose up -d --build

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Log in to Amazon ECR
        run: |
          aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | \
          docker login --username AWS --password-stdin \
          ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com

      - name: Log in to Amazon ECR
        run: |
          aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | docker login --username AWS --password-stdin \
          ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com

      - name: Build and Push Backend Image to Public ECR
        run: |
          IMAGE_NAME=public.ecr.aws/${{ secrets.PUBLIC_ECR_ALIAS }}/taskapp-backend:latest
          docker build -f ./Backend/Dockerfile.backend -t taskapp-backend ./Backend
          docker tag taskapp-backend:latest $IMAGE_NAME
          docker push $IMAGE_NAME

      - name: Build and Push Frontend Image to Public ECR
        run: |
         IMAGE_NAME=public.ecr.aws/${{ secrets.PUBLIC_ECR_ALIAS }}/taskapp-frontend:latest
         docker build -f ./Frontend/Dockerfile.frontend -t taskapp-frontend ./Frontend
         docker tag taskapp-frontend:latest $IMAGE_NAME
         docker push $IMAGE_NAME


      - name: Deploy to ECS
        run: |
          aws ecs update-service \
            --cluster ${{ secrets.ECS_CLUSTER_NAME }} \
            --service ${{ secrets.ECS_SERVICE_NAME }} \
            --force-new-deployment

        
